@font-face {
    font-family: PunctCJK;
    src: url(./fonts/PunctCJK.woff2);
}

@font-face {
    font-family: PunctCJK;
    font-style: italic;
    src: url(./fonts/PunctCJK-Italic.woff2);
}

@font-face {
    font-family: PunctCJK;
    font-weight: bold;
    src: url(./fonts/PunctCJK-Bold.woff2);
}

@font-face {
    font-family: PunctCJK;
    font-weight: bold;
    font-style: italic;
    src: url(./fonts/PunctCJK-BoldItalic.woff2);
}

@font-face {
    font-family: NotoSans;
    src: url(./fonts/NotoSans-Regular.woff2);
}

@font-face {
    font-family: NotoSans;
    font-style: italic;
    src: url(./fonts/NotoSans-Italic.woff2);
}

@font-face {
    font-family: NotoSans;
    font-weight: bold;
    src: url(./fonts/NotoSans-Bold.woff2);
}

@font-face {
    font-family: NotoSans;
    font-weight: bold;
    font-style: italic;
    src: url(./fonts/NotoSans-BoldItalic.woff2);
}

@mixin skip-number {
    display: none !important;
}

.markdown-body {
    font-size: 18px;
    font-family: PunctCJK, NotoSans;
    line-height: 1.8;
    letter-spacing: 0.015em;
    text-align: justify;

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        margin: 1em 0;
    }

    h1 {
        font-size: 2.2em;
        font-weight: normal;
    }

    h2 {
        font-size: 1.8em;
        font-weight: normal;

        &::before {
            content: counter(h2counter) !important;
            font-weight: bold;
            border-bottom: 4px solid #ffd000;
            margin-right: 0.75em;
            padding: 4px 6px;
        }

        &.reference {
            @include skip-number;
        }
    }

    h3 {
        font-size: 1.4em;
        @include skip-number;
    }

    h4 {
        font-size: 1.2em;
        @include skip-number;
    }

    h5 {
        font-size: 1.1em;
        @include skip-number;
    }

    h6 {
        font-size: 1em;
        @include skip-number;
    }

    mark {
        padding: 3px 3px 1px;
    }

    code {
        font-family: 'Cascadia Code';
        font-size: 0.9em;
        padding: 1px 3px;
        background-color: var(--g-color-96) !important;
        color: var(--g-color-20);
    }

    .katex {
        font-family: KaTeX_Main, NotoSans;
        font-size: 1.1em;
        line-height: 1.2;
        letter-spacing: normal;

        .cjk_fallback {
            font-size: 0.909091em;
        }
    }

    a {
        color: #1088c8 !important;
        text-decoration: none;
        padding-bottom: 0.1em;

        &:hover {
            border-bottom: 1.5px solid #{'#1088c850'};
        }

        &::after {
            margin-left: 0.2em;
            vertical-align: 0.1em !important;
            // #1088c8
            filter: brightness(0) invert(39%) sepia(59%) saturate(1671%) hue-rotate(174deg) brightness(90%) contrast(87%);
        }
    }

    hr.footnote-sep {
        display: none;
    }

    .footnotes {
        font-size: 0.75em;

        .footnote-backref {
            vertical-align: 0 !important;
        }
    }

    pre {
        font-size: 0.9em;
        padding: 0.5em;

        .p-mcc-language {
            top: -5px !important;
            right: -5px !important;
            font-family: 'Cascadia Code';
        }

        .p-mcc-copy-btn {
            position: absolute !important;
            top: -8px !important;
            right: -8px !important;
            display: block !important;
            line-height: 0;
            text-indent: 0.5px;
        }

        > code {
            font-family: 'Cascadia Code' !important;
            padding: initial;
        }
    }

    li::marker {
        font-family: initial;
    }

    .task-list-item-checkbox {
        outline: 1px solid var(--g-color-60);
        width: 1em;
        height: 1em;
        margin-right: 0.2em;
        vertical-align: -0.15em;
        accent-color: var(--g-color-96);

        &:not(:checked) {
            appearance: none;
        }
    }

    table:not([data-lang]) {
        border-collapse: collapse;
        line-height: normal;

        th,
        td {
            padding: 0.5em;
            border: 0.5px solid var(--g-color-60) !important;
        }

        tr {
            background-color: var(--g-color-96);
        }

        th {
            font-weight: normal;
            text-align: center !important;
        }

        tr td:first-child::before {
            font-family: 'Cascadia Code' !important;
            line-height: 1.4;
        }
    }

    img {
        width: 100%;
    }

    hr {
        border: initial;
        border-bottom: 1px solid;
    }

    .custom-container {
        padding: 1em !important;
        margin: 1em 0 !important;
        line-height: normal;

        > .custom-container-title {
            margin: 0 0 0.5em !important;
        }

        &.has-title > :nth-child(2),
        &:not(.has-title) > :first-child {
            margin-top: 0;
        }

        > :last-child {
            margin-bottom: 0;
        }

        &.details {

            &.has-title > :nth-child(2),
            &:not(.has-title) > :first-child {
                margin-top: 0.5em !important;
            }
        }

        &.row {
            border: none !important;
            padding: 0 !important;

            &.has-title {
                padding-top: 1.8em !important;
            }

            > .custom-container-title {
                top: 0 !important;
                padding-left: 0 !important;
                text-indent: 8px;
            }

            > .col {
                margin: 0 !important;
            }
        }

        &.group {
            padding: 0 !important;

            > .custom-container-title {
                margin: 0 !important;
            }

            > .group-item-content {
                padding: 1em !important;

                > :first-child {
                    margin-top: 0;
                }

                > :last-child {
                    margin-bottom: 0;
                }
            }
        }
    }
}

[math-env] {
    padding: 0.8em 1.2em;
    position: relative;

    > [math-env-title] {

        &::before,
        &::after {
            font-weight: bold;
        }

        &::after {
            margin-right: 0.5em;
        }
    }

    ol,
    ul {
        margin: 0;
    }

    ol {
        counter-reset: li;

        > li {
            counter-increment: li;

            &::marker {
                content: '(' counter(li) '). ';
            }
        }
    }

    &::after {
        border: 1px solid;
        width: 0.9em;
        height: 0.9em;
        display: block;
        position: absolute;
        right: 0;
        bottom: 0.5em;
    }
}

// text         hsv(h, 0.9, 0.8)
// border       hsv(h, 0.5, 1)
// background   hsv(h, 0.05, 1)

/* MathEnv Template
return (attr.hue === undefined ? `
[math-env="${name}"] {
    padding: 0;
}
` : `
[math-env="${name}"] {
    border-left: 3px solid hsl(${attr.hue}, 100%, 75%);
    background-color: hsla(${attr.hue}, 100%, 88%, 20%);
}

[math-env-title="${name}"] {
    color: hsl(${attr.hue}, 82%, 44%);
}

html[app-theme="dark"] [math-env-title="${name}"] {
    color: hsl(${attr.hue}, 82%, 56%);
}

@media (prefers-color-scheme: dark) {
    html[app-theme=system] [math-env-title="${name}"] {
        color: hsl(${attr.hue}, 82%, 56%);
    }
}
`) + (attr.proof ? `
[math-env="${name}"]::after {
    content: "";
}
` : '')
*/

/* MathEnv Environment
{
	"axiom": {
		"text": "公理",
		"counter": {
			"level": 1
		},
		"hue": 0
	},
	"definition": {
		"text": "定义",
		"counter": {
			"level": 2
		},
		"hue": 30
	},
	"theorem": {
		"text": "定理",
		"counter": {
			"level": 3
		},
		"hue": 200
	},
	"proposition": {
		"text": "命题",
		"counter": {
			"identifier": "theorem"
		},
		"hue": 200
	},
	"lemma": {
		"text": "引理",
		"counter": {
			"identifier": "theorem"
		},
		"hue": 200
	},
	"corollary": {
		"text": "推论",
		"counter": {
			"identifier": "theorem"
		},
		"hue": 200
	},
	"property": {
		"text": "性质",
		"counter": {
			"identifier": "theorem"
		},
		"hue": 200
	},
	"problem": {
		"text": "问题",
		"counter": {
			"level": 3
		},
		"hue": 120
	},
	"example": {
		"text": "例",
		"counter": {
			"level": 3
		},
		"hue": 120
	},
	"exercise": {
		"text": "练习",
		"counter": {
			"level": 3
		},
		"hue": 120
	},
	"note": {
		"text": "笔记",
		"hue": 120
	},
	"conclusion": {
		"text": "结论",
		"hue": 120
	},
	"assumption": {
		"text": "假设",
		"hue": 120
	},
	"remark": {
		"text": "注",
		"hue": 120
	},
	"solution": {
		"text": "解",
        "proof": true
	},
	"proof": {
		"text": "证明",
        "proof": true
	}
}
*/